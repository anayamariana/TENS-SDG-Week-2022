/*************************************************************
  TENS CODE
 *************************************************************/

// Template ID, Device Name and Auth Token are provided by the Blynk.Cloud
// See the Device Info tab, or Template settings
#define BLYNK_TEMPLATE_ID           "TMPL14XmOYRv"
#define BLYNK_DEVICE_NAME           "Pattern 1"
#define BLYNK_AUTH_TOKEN            "Cq-d8fNghqtiP1pkMyg039rTL1Lon4wP"


// Comment this out to disable prints and save space
#define BLYNK_PRINT Serial

#include <ESP8266WiFi.h>
#include <BlynkSimpleEsp8266.h>
#include <Wire.h>
#include <ESP8266WiFi.h>
#include <Adafruit_MCP4725.h>

Adafruit_MCP4725 dac;

char auth[] = BLYNK_AUTH_TOKEN;

// Your WiFi credentials.
// Set password to "" for open networks.
char ssid[] = "MovuinoTest";
char pass[] = "MovuinoTest";
int maxValue = 0;
int pattern = 600;
bool state_pattern = false;
BlynkTimer timer;

// This function is called every time the Virtual Pin 0 state changes
BLYNK_WRITE(V0) // on and off switch
{
  Serial.println(param.asInt());
  if (param.asInt() == 1) {
    digitalWrite (12, HIGH); //turn ON
  }
  else {
    digitalWrite(12, LOW);
  }

  // Update state
  //Blynk.virtualWrite(V1, value);

}

BLYNK_WRITE(V4)
{
  // Set incoming value from pin V4 to a variable
  maxValue = param.asInt();
  dac.setVoltage(maxValue, false);
  Serial.println(maxValue);
}

BLYNK_WRITE(V5)
{
  //  dac.setVoltage(pattern,false);

  if (param.asInt() == 1)
    state_pattern = true;
  else
    state_pattern = false;
    
  Serial.println(state_pattern);
  
  //did not manage to make it work on the device
}



// This function is called every time the device is connected to the Blynk.Cloud
BLYNK_CONNECTED()
{
  // Change Web Link Button message to "Congratulations!"
  Blynk.setProperty(V3, "offImageUrl", "https://static-image.nyc3.cdn.digitaloceanspaces.com/general/fte/congratulations.png");
  Blynk.setProperty(V3, "onImageUrl",  "https://static-image.nyc3.cdn.digitaloceanspaces.com/general/fte/congratulations_pressed.png");
  Blynk.setProperty(V3, "url", "https://docs.blynk.io/en/getting-started/what-do-i-need-to-blynk/how-quickstart-device-was-made");
}

// This function sends Arduino's uptime every second to Virtual Pin 2.

void setup()
{
  // Debug console
  Serial.begin(115200);

  Blynk.begin(auth, ssid, pass);
  // You can also specify server:
  //Blynk.begin(auth, ssid, pass, "blynk.cloud", 80);
  //Blynk.begin(auth, ssid, pass, IPAddress(192,168,1,100), 8080);

  // Setup a function to be called every second
  pinMode(13, OUTPUT);
  digitalWrite(13, LOW);

  // For Adafruit MCP4725A1 the address is 0x62 (default) or 0x63 (ADDR pin tied to VCC)
  // For MCP4725A0 the address is 0x60 or 0x61
  // For MCP4725A2 the address is 0x64 or 0x65
  dac.begin(0x62);

  Serial.println("Generating a triangle wave");

  pinMode (12, OUTPUT); // CONNECTED TO S TERMINAL OF RELAY
  digitalWrite (12, LOW); // turn relay ON
}

void loop()
{
  uint32_t counter;
  Blynk.run();
  // You can inject your own code or combine it with other sketches.
  // Check other examples on how to communicate with Blynk. Remember
  // to avoid delay() function!


  if (state_pattern == true)
    dac.setVoltage(pattern, false);
  else {
    dac.setVoltage(maxValue, false);
    // Run through the full 12-bit scale for a triangle wave
    for (counter = 0; counter < maxValue; counter++)
    {
      dac.setVoltage(counter, false);
    }
    for (counter = maxValue; counter > 0; counter--)
    {
      dac.setVoltage(counter, false);
    }
  }


}
